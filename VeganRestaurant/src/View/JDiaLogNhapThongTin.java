/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import Controller.*;
import static Controller.DatBanDao.DA_DAT;
import Model.ChiTietDatBan;
import Utils.MsgBox;
import javax.swing.JTextField;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import Model.KhachHang;
import Model.PhieuDatBan;
import Utils.XDate;
import java.util.Calendar;
import java.time.LocalTime;
import java.util.Date;

/**
 *
 * @author Võ Thanh Tùng
 */
public class JDiaLogNhapThongTin extends javax.swing.JDialog {

    DatBanDao dbDAO = new DatBanDao();
    KhachHangDBDao khDAO = new KhachHangDBDao();
    PhieuDatBanDao pdbDao = new PhieuDatBanDao();
    ChiTietDatBan_DAO ctdbDAO = new ChiTietDatBan_DAO();
    List<PhieuDatBan> listpdb = new ArrayList<>();
    int maBan;
    int maMaxPDB;

    /**
     * Creates new form JDiaLogNhapThongTin
     */
    public JDiaLogNhapThongTin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setTitle("Nhập thông tin");
        // Disable editing of the text field
        ((JTextField) txtThoiGian.getDateEditor().getUiComponent()).setEditable(false);
        layGioVaPhut();
        Calendar cal = Calendar.getInstance();
        txtThoiGian.setCalendar(cal);

        data();

    }

    public void setBan(int maBan) {
        lbmaBan.setText("Bàn: " + maBan);
        this.maBan = maBan;
    }

    void data() {
        LoadKhachHang();
        LoadPhieuDatBan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtTenKhach = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtThoiGian = new com.toedter.calendar.JDateChooser();
        lbmaBan = new javax.swing.JLabel();
        cbThoiGian = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông tin đặt bàn");

        jLabel2.setText("Tên khách:");

        jLabel3.setText("SDT:");

        jLabel4.setText("Thời gian:");

        jButton1.setBackground(new java.awt.Color(255, 0, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Xác nhận");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtTenKhach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKhachActionPerformed(evt);
            }
        });

        lbmaBan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbmaBan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbmaBan.setText("Bàn 1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(txtTenKhach, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbmaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lbmaBan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenKhach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenKhachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKhachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKhachActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String maBan = lbmaBan.getText().substring(5);
        if (Checkvalidate()) {
            insert();
            thayDoiTrangThai(maBan);
            MsgBox.alert(this, "Đặt bàn thành công");
            this.setVisible(false);
        }
        System.out.println(layThoiGian());

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDiaLogNhapThongTin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDiaLogNhapThongTin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDiaLogNhapThongTin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDiaLogNhapThongTin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDiaLogNhapThongTin dialog = new JDiaLogNhapThongTin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbThoiGian;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lbmaBan;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKhach;
    private com.toedter.calendar.JDateChooser txtThoiGian;
    // End of variables declaration//GEN-END:variables
    public static List<LocalTime> generateTimeList() {
        List<LocalTime> timeList = new ArrayList<>();
        LocalTime time = LocalTime.of(7, 0); // Bắt đầu từ 1h sáng
        while (time.getHour() != 0 || time.getMinute() != 0) {
            timeList.add(time);
            time = time.plusMinutes(5); // Tăng thời gian lên 5 phút
            if (time.getHour() == 23 && time.getMinute() == 55) {
                // Khi đạt tới 23:55, dừng lại
                break;
            }
        }
        return timeList;
    }

    void layGioVaPhut() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        List<LocalTime> timeList = generateTimeList();
        for (LocalTime time : timeList) {
            model.addElement(time.toString());
        }
        cbThoiGian.setModel(model);
    }

    public Date layThoiGian() {
        Date date = txtThoiGian.getDate();
        String gioPhut = (String) cbThoiGian.getSelectedItem();
        if (date != null) {
            String DateStr = XDate.toString(date, "yyyy-MM-dd ") + gioPhut;
            Date NgayGio = XDate.toDate(DateStr, "yyyy-MM-dd HH:mm");
            return NgayGio;
        }

        return null;
    }

    private ChiTietDatBan getFormCTDB() {
        ChiTietDatBan ctdb = new ChiTietDatBan();
        ctdb.setMaBan(maBan);
//        ctdb.setMaPhieuDat(listpdb.size() + 1);
        return ctdb;
    }

    private PhieuDatBan getFormPDB() {
        // Gọi phương thức layThoiGian() để lấy đối tượng Date
        Date date = layThoiGian();

        PhieuDatBan pdb = new PhieuDatBan();
        pdb.setThoiGianDat(date);
//        pdb.setMaKhachHang(max ma khach hang);
        return pdb;
    }

    private KhachHang getFormKH() {
        KhachHang kh = new KhachHang();
        kh.setTenKhachHang(txtTenKhach.getText());
        kh.setSDT(txtSDT.getText());
        return kh;
    }

    void LoadPhieuDatBan() {
//        listpdb = pdbDao.selectAll();
    }

    void LoadKhachHang() {
//        listkh = khDAO.selectAll();
    }

    void insert() {
        KhachHang kh = getFormKH();
        PhieuDatBan pdb = getFormPDB();
        ChiTietDatBan ctdb = getFormCTDB();
        try {
            int maMaxKH = khDAO.SelectMaxkH();
            khDAO.setMaxKh(maMaxKH);
            khDAO.insert(kh);
            pdb.setMaKhachHang(maMaxKH + 1);
             maMaxPDB = pdbDao.SelectMaxPDB();
            pdbDao.setMaxPDB(maMaxPDB);
            pdbDao.insert(pdb);
            ctdb.setMaPhieuDat(maMaxPDB + 1);
            ctdbDAO.insert(ctdb);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public int getMaMaxPDB() {
        return maMaxPDB;
    }

    boolean Checkvalidate() {
        Date thoiGianHienTai = new Date();
        if (txtTenKhach.getText().isEmpty()) {
            MsgBox.alert(this, "Tên khách hàng không được bỏ trống");
            return false;
        }
        if (txtSDT.getText().isEmpty()) {
            MsgBox.alert(this, "SDT không được bỏ trống");
            return false;
        }
        if (!txtSDT.getText().matches("\\d{10}")) {
            MsgBox.alert(this, "Số điện thoại không hợp lệ. Vui lòng nhập lại.");
            return false;
        }

        if (txtThoiGian.getDate() == null) {
            MsgBox.alert(this, "Thời gian không được bỏ trống");
            return false;
        }
        if (txtThoiGian.getDate().getTime() < thoiGianHienTai.getTime()) {
            MsgBox.alert(this, "Thời gian lớn hơn hoặc bằng thời gian hiện tại");
            return false;
        }

        return true;
    }

    public void thayDoiTrangThai(String maBan) {
        dbDAO.updateTrangThai(DA_DAT, maBan);
    }
}
