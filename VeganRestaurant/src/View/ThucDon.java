/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.ThucDonDAO;
import Model.MonAn;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author buimi
 */
public class ThucDon extends javax.swing.JPanel {

    /**
     * Creates new form ThucDon
     */
    private ThucDonDAO thucDonDAO;

    public ThucDon() {
        initComponents();
        thucDonDAO = new ThucDonDAO();
        // Gọi các hàm khác nếu cần
        // Ví dụ: loadDanhSachTheoMaThucDonLenTable("TD246");
        loadDanhSachMonAn();
        initCombobox();
    }

    private void loadDanhSachMonAn() {
        // Gọi phương thức từ ThucDonDAO và hiển thị lên giao diện
        List<MonAn> danhSachMonAn = thucDonDAO.layDanhSachThucDon();
        loadDanhSachMonLenTable(danhSachMonAn);
    }

    private void initCombobox() {
        List<String> danhSachThucDon = thucDonDAO.layDanhSachTenThucDon();
        for (String tenThucDon : danhSachThucDon) {
            cbbThucDon.addItem(tenThucDon);
        }

        List<String> danhSachLoaiMon = thucDonDAO.layDanhSachLoaiMon();
        for (String loaiMon : danhSachLoaiMon) {
            cbbLoaiMon.addItem(loaiMon);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbThucDon = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblTenMon = new javax.swing.JTextField();
        lblHinh = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbLoaiMon = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        chk246 = new javax.swing.JCheckBox();
        chk357 = new javax.swing.JCheckBox();
        btnLuu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThucDon = new javax.swing.JTable();
        chkCaTuan = new javax.swing.JCheckBox();
        btnTim = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý thực đơn");

        jLabel2.setText("Thực Đơn");

        jLabel3.setText("Tên món:");

        jLabel5.setText("Loại món");

        jLabel6.setText("Ngày phục vụ:");

        buttonGroup1.add(chk246);
        chk246.setText("2,4,6,CN");
        chk246.setToolTipText("TD246");
        chk246.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk246ActionPerformed(evt);
            }
        });

        buttonGroup1.add(chk357);
        chk357.setText("3,5,7");
        chk357.setToolTipText("TD357");

        btnLuu.setBackground(new java.awt.Color(255, 51, 102));
        btnLuu.setForeground(new java.awt.Color(0, 0, 0));
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        tblThucDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên món", "Loại món", "Ngày phục vụ", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThucDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThucDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThucDon);

        buttonGroup1.add(chkCaTuan);
        chkCaTuan.setText("Cả tuần");
        chkCaTuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCaTuanActionPerformed(evt);
            }
        });

        btnTim.setBackground(new java.awt.Color(255, 51, 102));
        btnTim.setForeground(new java.awt.Color(0, 0, 0));
        btnTim.setText("Tìm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLuu)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(276, 276, 276)))
                                .addGap(44, 44, 44)
                                .addComponent(btnTim))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbbLoaiMon, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbbThucDon, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chk246)
                                .addGap(18, 18, 18)
                                .addComponent(chk357)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkCaTuan))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbbThucDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(lblTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbbLoaiMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(chk246)
                            .addComponent(chk357)
                            .addComponent(chkCaTuan))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLuu)
                            .addComponent(btnTim)))
                    .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chk246ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk246ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk246ActionPerformed

    private void chkCaTuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCaTuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkCaTuanActionPerformed

    private void tblThucDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThucDonMouseClicked
        int selectedRow = tblThucDon.getSelectedRow();
        if (selectedRow >= 0) {
            String tenMonAn = tblThucDon.getValueAt(selectedRow, 0).toString();
            String loaiMonAn = tblThucDon.getValueAt(selectedRow, 1).toString();
            String hinh = tblThucDon.getValueAt(selectedRow, 3).toString();
            String ngayPhucVu = tblThucDon.getValueAt(selectedRow, 2).toString();

            cbbThucDon.setSelectedItem(ngayPhucVu);
            cbbLoaiMon.setSelectedItem(loaiMonAn);
            lblTenMon.setText(tenMonAn);
            String imagePath = "/Image/menu/" + hinh;
            InputStream inputStream = getClass().getResourceAsStream(imagePath);
            if (inputStream != null) {
                try {
                    BufferedImage originalImage = ImageIO.read(inputStream);

                    int scaledWidth = 150;
                    int scaledHeight = (int) (((double) scaledWidth / originalImage.getWidth()) * originalImage.getHeight());

                    Image scaledImage = originalImage.getScaledInstance(scaledWidth, scaledHeight, Image.SCALE_SMOOTH);
                    ImageIcon scaledIcon = new ImageIcon(scaledImage);

                    lblHinh.setIcon(scaledIcon);

                    chk246.setSelected(ngayPhucVu.equals("Thứ 2,4,6,CN"));
                    chk357.setSelected(ngayPhucVu.equals("Thứ 3,5,7"));
                    chkCaTuan.setSelected(ngayPhucVu.equals("Cả Tuần"));

                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } else {
                System.err.println("Không thể tìm thấy hình ảnh: " + imagePath);
            }
        }
    }//GEN-LAST:event_tblThucDonMouseClicked

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        String tenMon = lblTenMon.getText();
        String maThucDon246 = chk246.getToolTipText();
        String maThucDon357 = chk357.getToolTipText();

        if (chk246.isSelected()) {
            // Kiểm tra xem món đã có trong thực đơn chưa
            if (!thucDonDAO.kiemTraMonTonTaiTrongThucDon(maThucDon246, tenMon)) {
                thucDonDAO.xoaMonAnKhoiThucDon(maThucDon357, tenMon);
                thucDonDAO.themMonAnVaoThucDon(maThucDon246, tenMon);
            }
        } else if (chk357.isSelected()) {
            // Kiểm tra xem món đã có trong thực đơn chưa
            if (!thucDonDAO.kiemTraMonTonTaiTrongThucDon(maThucDon357, tenMon)) {
                thucDonDAO.xoaMonAnKhoiThucDon(maThucDon246, tenMon);
                thucDonDAO.themMonAnVaoThucDon(maThucDon357, tenMon);
            }
        } else {
            // Xóa món khỏi cả hai thực đơn (nếu có)
            thucDonDAO.xoaMonAnKhoiThucDon(maThucDon357, tenMon);
            thucDonDAO.xoaMonAnKhoiThucDon(maThucDon246, tenMon);

            // Thêm món vào cả hai thực đơn
            thucDonDAO.themMonAnVaoThucDon(maThucDon246, tenMon);
            thucDonDAO.themMonAnVaoThucDon(maThucDon357, tenMon);
        }
        loadDanhSachMonAn();
        JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
    }//GEN-LAST:event_btnLuuActionPerformed

    public void loadDanhSachTheoMaThucDonLenTable(String maThucDon) {
        ThucDonDAO td = new ThucDonDAO();
        List<MonAn> danhSachMonAn = td.layDanhSachTheoMaThucDon(maThucDon);
        loadDanhSachMonLenTable(danhSachMonAn);
    }

    public void loadDanhSachMonLenTable(List<MonAn> danhSachMonAn) {
        DefaultTableModel model = (DefaultTableModel) tblThucDon.getModel();
        model.setRowCount(0); // Xóa tất cả các hàng trong bảng

        Set<String> filledMonAn = new HashSet<>(); // Danh sách các món ăn đã được fill

        // Fill theo TD357
        fillMonAnByNgayPhucVu(model, danhSachMonAn, "TD357", "Thứ 3,5,7", filledMonAn);

        // Fill theo TD246
        fillMonAnByNgayPhucVu(model, danhSachMonAn, "TD246", "Thứ 2,4,6,CN", filledMonAn);

        // Fill những món ăn có 2 lần xuất hiện
        fillMonAnWithDoubleOccurrence(model, danhSachMonAn, filledMonAn);
    }

    private void fillMonAnByNgayPhucVu(DefaultTableModel model, List<MonAn> danhSachMonAn, String ngayPhucVu, String ngayPhucVuString, Set<String> filledMonAn) {
        for (MonAn monAn : danhSachMonAn) {
            if (monAn.getNgayPhucVu().equals(ngayPhucVu)) {
                String tenMonAn = monAn.getTenMonAn();
                if (!filledMonAn.contains(tenMonAn)) {
                    filledMonAn.add(tenMonAn);
                    Object[] rowData = {tenMonAn, monAn.getLoaiMonAn(), ngayPhucVuString, monAn.getHinhAnh()};
                    model.addRow(rowData);
                }
            }
        }
    }

    private void fillMonAnWithDoubleOccurrence(DefaultTableModel model, List<MonAn> danhSachMonAn, Set<String> filledMonAn) {
        for (MonAn monAn : danhSachMonAn) {
            String tenMonAn = monAn.getTenMonAn();
            if (filledMonAn.contains(tenMonAn)) {
                continue; // Bỏ qua những món ăn đã được fill ở các bước trước
            }

            // Kiểm tra nếu món ăn có 2 lần xuất hiện
            long count = danhSachMonAn.stream().filter(ma -> ma.getTenMonAn().equals(tenMonAn)).count();
            if (count == 2) {
                filledMonAn.add(tenMonAn);
                Object[] rowData = {tenMonAn, monAn.getLoaiMonAn(), "Cả Tuần", monAn.getHinhAnh()};
                model.addRow(rowData);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnTim;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbLoaiMon;
    private javax.swing.JComboBox<String> cbbThucDon;
    private javax.swing.JCheckBox chk246;
    private javax.swing.JCheckBox chk357;
    private javax.swing.JCheckBox chkCaTuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JTextField lblTenMon;
    private javax.swing.JTable tblThucDon;
    // End of variables declaration//GEN-END:variables
}
