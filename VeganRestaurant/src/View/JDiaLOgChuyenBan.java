/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import Controller.DatBanDao;
import static Controller.DatBanDao.DANG_PHUC_VU;
import static Controller.DatBanDao.Trong;
import Controller.PhieuDatBanDao;
import Utils.MsgBox;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Võ Thanh Tùng
 */
public class JDiaLOgChuyenBan extends javax.swing.JDialog {

    List<Integer> maBan = new ArrayList<>();
    List<Integer> DanhSachBan = new ArrayList<>();
    DatBanDao dbDAO = new DatBanDao();

    /**
     * Creates new form JDiaLOgChuyenBan
     */
    public JDiaLOgChuyenBan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

    }

    public void setBan(List<Integer> maBanList) {
        maBan = maBanList;
        if (!maBanList.isEmpty()) {
            String maBanText = "Bàn: ";
            for (Integer maBan : maBanList) {
                maBanText += maBan + " ";
            }
            lbMaBan.setText(maBanText);
        } else {

        }
//        layMaBan(maBan);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbMaBan = new javax.swing.JLabel();
        txtMaBan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnXacNhan = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbMaBan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMaBan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMaBan.setText("Bàn: 1");

        txtMaBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaBanKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Bàn muốn đổi");

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaBan)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 220, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnHuy)
                        .addGap(18, 18, 18)
                        .addComponent(btnXacNhan)))
                .addContainerGap())
            .addComponent(lbMaBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbMaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(txtMaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXacNhan)
                    .addComponent(btnHuy))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        if (CheckValiDate()) {
            thayDoiBan();
            JFrame fr = new JFrame();
            JDiaLogDangPhucVu dialog = new JDiaLogDangPhucVu(fr, true);
            dialog.dispose();
            JPanelTang1.TrangThaiBan();
            JPanelTang2.TrangThaiBan();
            JPanelTang3.TrangThaiBan();
            JPanelDatBan.fillToTable();
            this.dispose();
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void txtMaBanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaBanKeyReleased
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtMaBan.setText("");
            DanhSachBan.clear();
            txtMaBan.setText("");
        }
    }//GEN-LAST:event_txtMaBanKeyReleased

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDiaLOgChuyenBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDiaLOgChuyenBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDiaLOgChuyenBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDiaLOgChuyenBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDiaLOgChuyenBan dialog = new JDiaLOgChuyenBan(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbMaBan;
    private javax.swing.JTextField txtMaBan;
    // End of variables declaration//GEN-END:variables
    boolean CheckValiDate() {
        if (txtMaBan.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống");
            return false;
        }
        List<Integer> Listmaban = chuyenChuoiThanhList(txtMaBan.getText());
        this.DanhSachBan = Listmaban;
        for (Integer ma : Listmaban) {
            if (ma < 1 || ma > 36) {
                JOptionPane.showMessageDialog(this, "Chỉ được nhập 1 - 36");
                return false;
            }
        }
        return true;
    }

    void thayDoiBan() {
        int maBann = maBan.get(0);
        this.setVisible(false);
        PhieuDatBanDao pdb = new PhieuDatBanDao();
        int MaPDB = pdb.SelectMaPDB(maBann);
        boolean foundButton = false;
        JButton button;
        button = JPanelTang1.timButtonByMaBan(maBann);
        if (button != null) {
            button.setToolTipText(MaPDB + "");
            MaPDB = Integer.parseInt(button.getToolTipText());
            foundButton = true;
        }

        if (!foundButton) {
            button = JPanelTang2.timButtonByMaBan(maBann);
            if (button != null) {
                button.setToolTipText(MaPDB + "");
                MaPDB = Integer.parseInt(button.getToolTipText());
                foundButton = true;
            }
        }

        if (!foundButton) {
            button = JPanelTang3.timButtonByMaBan(maBann);
            if (button != null) {
                button.setToolTipText(MaPDB + "");
                MaPDB = Integer.parseInt(button.getToolTipText());
            }
        }
        List<Integer> danhSachSoMoi = this.DanhSachBan;

        List<Integer> danhSachSoCu = maBan;

        List<Integer> dsCanCapNhat = new ArrayList<>(danhSachSoMoi);
        dsCanCapNhat.removeAll(maBan);
        // Tạo một Map để lưu trữ các cặp mã bàn cũ và mới
        Map<Integer, Integer> mapBan = new HashMap<>();

        // Đưa các cặp mã bàn cũ và mới vào map
        for (int i = 0; i < danhSachSoCu.size(); i++) {
            mapBan.put(danhSachSoCu.get(i), danhSachSoMoi.get(i));
        }

//        for (Integer ma : maBan) {
//            dbDAO.updateTrangThai(Trong, ma + "");
//        }
        
        for (Map.Entry<Integer, Integer> entry : mapBan.entrySet()) {
            int maCu = entry.getKey();
            System.out.println(maCu);
            int maMoi = entry.getValue();
            System.out.println(maMoi);
            String trangThai = dbDAO.checkTonTai(maMoi);
            int CheckMaPDBmoi = pdb.SelectMaPDB(maMoi);

//             Nếu bàn mới đang phục vụ
            if (trangThai.equals(DANG_PHUC_VU)) {
                int CheckMaPDBcu = pdb.SelectMaPDB(maCu);
                if (CheckMaPDBcu != CheckMaPDBmoi) {
                    MsgBox.alert(this, "Bàn bạn muốn chuyển đã đang phục vụ. Vui lòng chọn bàn khác.");
                    return;
                }

            }

            dbDAO.chuyenBan(maMoi, maCu, MaPDB); // Thực hiện chuyển đổi chỉ một lần
            System.out.println(maMoi+"MaBan moi");
            System.out.println(maCu+"MaBan cu");
            dbDAO.updateTrangThai(Trong, maCu + "");
            dbDAO.updateTrangThai(DANG_PHUC_VU, maMoi + ""); // Cập nhật trạng thái
        }
        MsgBox.alert(this, "Đã chuyển sáng bàn: " + DanhSachBan);

    }

    public static List<Integer> chuyenChuoiThanhList(String chuoiSo) {
        List<Integer> danhSachSo = new ArrayList<>();

        // Tách chuỗi thành các chuỗi con dựa trên khoảng trắng
        String[] mangChuoi = chuoiSo.split(" ");

        // Chuyển các chuỗi thành số và thêm vào danh sách
        for (String chuoi : mangChuoi) {
            int so = Integer.parseInt(chuoi);
            danhSachSo.add(so);
        }

        return danhSachSo;
    }
}
