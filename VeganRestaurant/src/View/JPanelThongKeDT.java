/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.ThongKeDAO;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.DefaultXYDataset;

/**
 *
 * @author Võ Thanh Tùng
 */
public class JPanelThongKeDT extends javax.swing.JPanel {

    ThongKeDAO tkDAO = new ThongKeDAO();

    /**
     * Creates new form JPanelThongKeDT
     */
    public JPanelThongKeDT() {
        initComponents();
        init();

        ImageIcon iconuser = new ImageIcon("Logos/bar-chart.png");
        btnBieuDo.setIcon(iconuser);
        ImageIcon iconuser1 = new ImageIcon("Logos/printer.png");
        jButton1.setIcon(iconuser1);
    }

    void init() {
        fillToComBoBoxThang();
        fillToTableThang();
        fillToComBoBoxNam();
        fillToTableNam();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoanhThuThang = new javax.swing.JTable();
        cboThang = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnBieuDo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnBieuDoNam = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoanhThuNam = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ngày", jPanel1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 153));
        jLabel2.setText("Doanh thu theo tháng");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblDoanhThuThang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Ngày", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoanhThuThang);

        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Tháng");

        btnBieuDo.setBackground(new java.awt.Color(255, 0, 102));
        btnBieuDo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBieuDo.setText("Biểu đồ");
        btnBieuDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBieuDoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("In file excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBieuDo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBieuDo)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tháng", jPanel2);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 153));
        jLabel4.setText("Doanh thu theo năm");
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Năm");

        btnBieuDoNam.setBackground(new java.awt.Color(255, 0, 102));
        btnBieuDoNam.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBieuDoNam.setText("Biểu đồ");
        btnBieuDoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBieuDoNamActionPerformed(evt);
            }
        });

        tblDoanhThuNam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tháng", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDoanhThuNam);

        jButton3.setBackground(new java.awt.Color(255, 0, 102));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("In file excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(btnBieuDoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBieuDoNam)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(77, 77, 77)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Năm", jPanel3);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông kê doanh thu");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
        fillToTableThang();
    }//GEN-LAST:event_cboThangActionPerformed

    private void btnBieuDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBieuDoActionPerformed
        drawElliottWaveChartThang();
    }//GEN-LAST:event_btnBieuDoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fillToTableAndExportToExcelThang();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        fillToTableNam();
    }//GEN-LAST:event_cboNamActionPerformed

    private void btnBieuDoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBieuDoNamActionPerformed
        drawElliottWaveChartNam();
    }//GEN-LAST:event_btnBieuDoNamActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        fillToTableAndExportToExcelNam();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBieuDo;
    private javax.swing.JButton btnBieuDoNam;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblDoanhThuNam;
    private javax.swing.JTable tblDoanhThuThang;
    // End of variables declaration//GEN-END:variables

    void fillToTableThang() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThuThang.getModel();
        model.setRowCount(0);
        int month = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuThang(month);
        for (Object[] rows : list) {
            model.addRow(new Object[]{rows[0], rows[1]});
        }

    }

    void fillToComBoBoxThang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThang.getModel();
        model.removeAllElements();
        List<Integer> list = tkDAO.selectMonth();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    void fillToTableNam() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThuNam.getModel();
        model.setRowCount(0);
        int month = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuNam(month);
        for (Object[] rows : list) {
            model.addRow(new Object[]{rows[0], rows[1]});
        }

    }

    void fillToComBoBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<Integer> list = tkDAO.selectYest();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    private void drawElliottWaveChartThang() {
        // Lấy dữ liệu từ ComboBox
        int year = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuThang(year);

        // Tạo dữ liệu cho biểu đồ
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][list.size()];
        for (int i = 0; i < list.size(); i++) {
            Object[] row = list.get(i);
            String doanhThuStr = row[1].toString();
            // Loại bỏ dấu phẩy từ chuỗi doanh thu
            doanhThuStr = doanhThuStr.replace(",", "");
            double doanhThu = Double.parseDouble(doanhThuStr);
            data[1][i] = doanhThu;

            // Sử dụng số thứ tự của hàng làm giá trị cho trục x
            data[0][i] = i + 1;
        }
        dataset.addSeries("Doanh thu", data);

        // Tạo biểu đồ Elliott Wave
        JFreeChart chart = ChartFactory.createXYLineChart(
                "Doanh thu theo tháng " + year, "Ngày", "Doanh thu",
                dataset, PlotOrientation.VERTICAL, false, true, false);

        XYPlot plot = chart.getXYPlot();
        NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis();
        domainAxis.setTickUnit(new NumberTickUnit(1)); // Đặt đơn vị tick là 1
        domainAxis.setRange(0.5, list.size() + 0.5); // Đặt khoảng giá trị trục x từ 0.5 đến số lượng hàng + 0.5
        domainAxis.setTickLabelsVisible(true); // Hiển thị nhãn tick

        // Hiển thị biểu đồ trong cửa sổ JFrame mới
        JFrame frame = new JFrame("Biểu đồ Elliott Wave");
        ChartPanel chartPanel = new ChartPanel(chart);
        frame.getContentPane().add(chartPanel);
        frame.setSize(800, 600);
        frame.setVisible(true);
    }

    void fillToTableAndExportToExcelThang() {
        int year = (Integer) cboThang.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuThang(year);

        // Tạo một workbook mới
        try ( Workbook workbook = new XSSFWorkbook()) {
            Sheet sheet = workbook.createSheet("DoanhThu" + year);

            CellStyle style = workbook.createCellStyle();
            style.setAlignment(HorizontalAlignment.CENTER); // Căn giữa theo chiều ngang
            style.setVerticalAlignment(VerticalAlignment.CENTER);
            style.setFillForegroundColor(IndexedColors.GOLD.getIndex());
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            Row reportRow = sheet.createRow(0);
            Row headerRow = sheet.createRow(1);
            Cell mergedCell = reportRow.createCell(0);
            mergedCell.setCellValue("Báo cáo");
            headerRow.createCell(0).setCellValue("Ngày");
            headerRow.createCell(1).setCellValue("Tổng tiền");

            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 1));
            mergedCell.setCellStyle(style);
            // Điền dữ liệu vào tệp Excel
// ...
            for (int i = 0; i < list.size(); i++) {
                Object[] rowData = list.get(i);
                Row row = sheet.createRow(i + 2);
                row.createCell(0).setCellValue((Integer) rowData[0]);
                Object value = rowData[1];
                double cellValue = 0.0; // Giá trị mặc định

                if (value instanceof BigDecimal) {
                    cellValue = ((BigDecimal) value).doubleValue();
                } else if (value instanceof String) {
                    String stringValue = ((String) value).replace(",", ""); // Loại bỏ dấu phẩy
                    try {
                        cellValue = Double.parseDouble(stringValue);
                    } catch (NumberFormatException ex) {
                        // Xử lý ngoại lệ nếu không thể chuyển đổi chuỗi thành số
                        ex.printStackTrace();
                        // Gán giá trị mặc định cho cellValue
                        cellValue = 0.0;
                    }
                } else {
                    // Xử lý trường hợp khác nếu cần
                    cellValue = 0.0;
                }
                row.createCell(1).setCellValue(cellValue);
            }
// ...

            // Lưu workbook vào tệp Excel
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Lưu tệp Excel");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files", "xlsx");
            fileChooser.setFileFilter(filter);

            int userSelection = fileChooser.showSaveDialog(null);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                String filePath = file.getAbsolutePath();

                // Thêm phần mở rộng .xlsx nếu người dùng không nhập nó
                if (!filePath.toLowerCase().endsWith(".xlsx")) {
                    filePath += ".xlsx";
                }

                try ( FileOutputStream fileOut = new FileOutputStream(filePath)) {
                    workbook.write(fileOut);
                    JOptionPane.showMessageDialog(null, "Tệp Excel đã được tạo thành công.");
                }
            } else {
                System.out.println("Người dùng không chọn đường dẫn lưu file.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void drawElliottWaveChartNam() {
        // Lấy dữ liệu từ ComboBox
        int year = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuNam(year);

        // Tạo dữ liệu cho biểu đồ
        DefaultXYDataset dataset = new DefaultXYDataset();
        double[][] data = new double[2][list.size()];
        for (int i = 0; i < list.size(); i++) {
            Object[] row = list.get(i);
            data[0][i] = i + 1; // Tháng
            data[1][i] = Double.parseDouble(row[1].toString()); // Doanh thu
        }
        dataset.addSeries("Doanh thu", data);

        


        // Tạo biểu đồ Elliott Wave
        JFreeChart chart = ChartFactory.createXYLineChart(
                "Doanh thu theo năm " + year, "Tháng", "Doanh thu",
                dataset, PlotOrientation.VERTICAL, false, true, false);

        XYPlot plot = chart.getXYPlot();
        NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis();
        domainAxis.setTickUnit(new NumberTickUnit(1)); // Đặt đơn vị tick là 1
        domainAxis.setRange(0.5, 12.5); // Đặt khoảng giá trị trục x từ 0.5 đến 12.5
        domainAxis.setTickLabelsVisible(true); // Hiển thị nhãn tick

        // Hiển thị biểu đồ trong cửa sổ JFrame mới
        JFrame frame = new JFrame("Biểu đồ Elliott Wave");
        ChartPanel chartPanel = new ChartPanel(chart);
        frame.getContentPane().add(chartPanel);
        frame.setSize(800, 600);
        frame.setVisible(true);
    }
     void fillToTableAndExportToExcelNam() {
        int year = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkDAO.getDoanhThuNam(year);

        // Tạo một workbook mới
        try ( Workbook workbook = new XSSFWorkbook()) {
            Sheet sheet = workbook.createSheet("DoanhThu" + year);

            CellStyle style = workbook.createCellStyle();
            style.setAlignment(HorizontalAlignment.CENTER); // Căn giữa theo chiều ngang
            style.setVerticalAlignment(VerticalAlignment.CENTER);
            style.setFillForegroundColor(IndexedColors.GOLD.getIndex());
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            Row reportRow = sheet.createRow(0);
            Row headerRow = sheet.createRow(1);
            Cell mergedCell = reportRow.createCell(0);
            mergedCell.setCellValue("Báo cáo");
            headerRow.createCell(0).setCellValue("Tháng");
            headerRow.createCell(1).setCellValue("Tổng tiền");

            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 1));
            mergedCell.setCellStyle(style);
            // Điền dữ liệu vào tệp Excel
            for (int i = 0; i < list.size(); i++) {
                Object[] rowData = list.get(i);
                Row row = sheet.createRow(i + 2);
                row.createCell(0).setCellValue((Integer) rowData[0]);
                row.createCell(1).setCellValue(((BigDecimal) rowData[1]).doubleValue());
            }

            // Lưu workbook vào tệp Excel
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Lưu tệp Excel");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files", "xlsx");
            fileChooser.setFileFilter(filter);

            int userSelection = fileChooser.showSaveDialog(null);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                String filePath = file.getAbsolutePath();

                // Thêm phần mở rộng .xlsx nếu người dùng không nhập nó
                if (!filePath.toLowerCase().endsWith(".xlsx")) {
                    filePath += ".xlsx";
                }

                try ( FileOutputStream fileOut = new FileOutputStream(filePath)) {
                    workbook.write(fileOut);
                    JOptionPane.showMessageDialog(null, "Tệp Excel đã được tạo thành công.");
                }
            } else {
                System.out.println("Người dùng không chọn đường dẫn lưu file.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static void main(String[] args) {
        JFrame frame = new JFrame("Thống kê món ăn");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add(new JPanelThongKeDT());
        frame.pack();
        frame.setVisible(true);
    }
}
